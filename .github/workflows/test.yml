name: Rustcore Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  RUST_BACKTRACE: 1
  RUST_LOG: debug

jobs:
  test:
    name: Test rustcore
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rust-src, llvm-tools-preview
        target: x86_64-unknown-linux-gnu
        
    - name: Install QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86
        
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Run tests
      run: |
        ./scripts/test.sh --verbose ci
        
    - name: Upload test artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-logs
        path: |
          debug*.log
          qemu.log
        retention-days: 7

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        profile: [debug, release]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rust-src
        
    - name: Install QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86
        
    - name: Build rustcore
      run: |
        if [ "${{ matrix.profile }}" = "release" ]; then
          cargo +nightly build --release
        else
          cargo +nightly build
        fi
        
    - name: Test build
      run: |
        if [ "${{ matrix.profile }}" = "release" ]; then
          ./scripts/test.sh --release --no-build boot
        else
          ./scripts/test.sh --no-build boot
        fi

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rust-src, llvm-tools-preview
        
    - name: Install QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86
        
    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin
      
    - name: Generate coverage
      run: |
        cargo tarpaulin --out Html --output-dir coverage/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/tarpaulin-report.html
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
